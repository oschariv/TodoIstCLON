#BlueJ class context
comment0.params=
comment0.target=ListaTareas()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ ListaTareas\r\n
comment1.params=
comment1.target=void\ printTareas()
comment1.text=\r\n\ Imprime\ por\ pantalla\ todas\ las\ tareas\ guardadas.\ \r\n
comment10.params=numeroTareasAMostrar
comment10.target=void\ mostrarPrimerasTareas(int)
comment10.text=\r\n\ Muestra\ por\ pantalla\ las\ primera\ "N"\ tareas\ indicads\ como\ parametro.\r\n\ En\ caso\ de\ que\ haya\ menos\ de\ "N"\ tareas\ se\ muestran\ todas.\r\n
comment11.params=textoABuscar
comment11.target=boolean\ hayTareasCoincidentes(java.lang.String)
comment11.text=\r\n\ Devuelve\ true\ o\ false\ si\ hay\ al\ menos\ una\ tarea\ que\ contien\ el\ texto\r\n\ indicado\ como\ parametro.\ NO\ MUESTRA\ NADA\ POR\ PANTALLA.\r\n
comment2.params=nuevaTarea
comment2.target=void\ addTarea(java.lang.String)
comment2.text=\r\n\ Permite\ a\u00F1adir\ una\ nueva\ tarea.\r\n
comment3.params=
comment3.target=int\ getNumeroTareas()
comment3.text=\r\n\ Devuelve\ el\ numero\ de\ tareas\ existentes\r\n
comment4.params=posicion
comment4.target=void\ deleteTarea(int)
comment4.text=\r\n\ Elimina\ una\ tarea.\r\n\ La\ posicion\ inicial\ es\ "CERO".\r\n\ El\ metodo\ supone\ que\ un\ valor\ de\ 1\ en\ el\ parametro\ indica\r\n\ la\ primera\ tarea,\ valor\ de\ 2\ la\ segunda,\ etc.\r\n
comment5.params=indice
comment5.target=boolean\ esValidoElIndice(int)
comment5.text=\r\n\ Metodo\ que\ comprueba\ si\ un\ indice\ valido\ y\ devuelve\ true\r\n\ en\ caso\ afirmativo\ o\ false\ en\ otro\ caso.\r\n\ El\ metodo\ supone\ que\ un\ valor\ de\ 0\ cuando\ hay\ una\ tarea\ es\ un\ valor\r\n\ de\ indice\ valido\ pero\ un\ valor\ de\ 1\ si\ solo\ hay\ una\ tarea\ no\ es\ valido.\r\n
comment6.params=
comment6.target=boolean\ hayTareasPendientes()
comment6.text=\r\n\ Metodo\ que\ devuelve\ true\ en\ caso\ de\ que\ haya\ tareas\ por\ hacer,\r\n\ false\ en\ el\ otro\ caso.\r\n
comment7.params=
comment7.target=void\ mostrarTareas()
comment7.text=\r\n\ Metodo\ que\ imprime\ todas\ las\ tareas\ existentes,\ una\ por\ linea.\r\n\ (Se\ usa\ el\ bucle\ FOR).\r\n\ El\ metodo\ imprime\ el\ numero\ de\ posicion\ de\ la\ tarea\ antes\ del\r\n\ nombre\ de\ tarea.\r\n
comment8.params=contenido
comment8.target=void\ mostrarTareasCoincidentes(java.lang.String)
comment8.text=\r\n\ Muestra\ todas\ las\ tareas\ (una\ por\ linea)\ que\ contengan\ un\ determinado\ texto\r\n\ pasado\ como\ parametro\ con\ su\ numeracion\ asociada\ correcta.\ si\ no\ hay\ ninguna\r\n\ tarea\ que\ contenga\ el\ texto\ indicado,\ se\ muestra\ \u00A1un\ mensaje\ de\ error\!.\r\n\ Si\ hay\ tareas\ coincidentes,\ tras\ la\ lista,\ se\ muestra\ el\ numero\ \r\n\ de\ tareas\ coincidentes.\r\n
comment9.params=
comment9.target=void\ mostrarTareas2()
comment9.text=\r\n\ Muestra\ todas\ las\ tareas\ existentes\ (usando\ un\ bucle\ WHILE)\r\n\ y\ que\ esten\ numerdads.\r\n
numComments=12
